{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","SideBar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","auth","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","SideBar","Button","startIcon","fontSize","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","SetEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","console","log","InboxIcon","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","formState","onSubmit","formData","add","FieldValue","serverTimestamp","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07e0c9ab.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBU3_GOnggS95bvljkr3Ccx0o0XAtAg6oQ\",\n  authDomain: \"fir-c3a65.firebaseapp.com\",\n  projectId: \"fir-c3a65\",\n  storageBucket: \"fir-c3a65.appspot.com\",\n  messagingSenderId: \"641873578910\",\n  appId: \"1:641873578910:web:65384fe60e60b12375248f\",\n  measurementId: \"G-K5LCSJ3G8Z\",\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth;\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport { db, auth, provider };\n","import React from \"react\";\nimport \"./Header.css\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useSelector } from \"react-redux\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Header() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch(logout());\n      });\n    dispatch(logout());\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <IconButton>\n          <MenuIcon />\n        </IconButton>\n        <img\n          src=\"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"header__middle\">\n        <SearchIcon />\n        <input placeholder=\"Search mail\" type=\"text\" />\n        <ArrowDropDownIcon />\n      </div>\n      <div className=\"header__right\">\n        <IconButton>\n          <AppsIcon />\n        </IconButton>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n        <Avatar onClick={signOut} src={user?.photoUrl} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ Icon, title, number, selected }) {\n  return (\n    <div className={`sidebarOption ${selected && \"sidebarOption--active\"}`}>\n      {Icon}\n      <h3>{title}</h3>\n      <p>{number}</p>\n    </div>\n  );\n}\n\nexport default SidebarOption;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const mailSlice = createSlice({\n  name: \"mail\",\n  initialState: {\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n    openSendMessage: (state) => {\n      state.sendMessageIsOpen = true;\n    },\n    closeSendMessage: (state) => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, closeSendMessage } =\n  mailSlice.actions;\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import { Button, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Sidebar.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SidebarOption from \"./SidebarOption\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\nimport NearMeIcon from \"@material-ui/icons/NearMe\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport DuoIcon from \"@material-ui/icons/Duo\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport { useDispatch } from \"react-redux\";\nimport { openSendMessage } from \"./features/mailSlice\";\nfunction SideBar() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"sidebar\">\n      <Button\n        className=\"sidebar__compose\"\n        startIcon={<AddIcon fontSize=\"large\" />}\n        onClick={() => {\n          dispatch(openSendMessage());\n        }}\n      >\n        Compose\n      </Button>\n      <SidebarOption\n        Icon={<InboxIcon />}\n        title=\"Inbox\"\n        number={45}\n        selected={true}\n      />\n      <SidebarOption Icon={<StarIcon />} title=\"Starred\" number={11} />\n      <SidebarOption Icon={<AccessTimeIcon />} title=\"Snoozed\" number={45} />\n      <SidebarOption\n        Icon={<LabelImportantIcon />}\n        title=\"Important\"\n        number={17}\n      />\n      <SidebarOption Icon={<NearMeIcon />} title=\"Sent\" number={33} />\n      <SidebarOption Icon={<NoteIcon />} title=\"Draft\" number={12} />\n      <SidebarOption Icon={<ExpandMoreIcon />} title=\"More\" number={41} />\n      <div className=\"sidebar__footer\">\n        <div className=\"sidebar__footerIcons\">\n          <IconButton>\n            <PersonIcon />\n          </IconButton>\n          <IconButton>\n            <DuoIcon />\n          </IconButton>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./Mail.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useHistory } from \"react-router-dom\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { selectOpenMail } from \"./features/mailSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction Mail() {\n  const history = useHistory();\n  const selectedMail = useSelector(selectOpenMail);\n\n  return (\n    <div className=\"mail\">\n      <div className=\"mail__tools\">\n        <div className=\"mail__toolsLeft\">\n          <IconButton\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <IconButton>\n            <MoveToInboxIcon />\n          </IconButton>\n          <IconButton>\n            <ErrorIcon />\n          </IconButton>\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n          <IconButton>\n            <EmailIcon />\n          </IconButton>\n          <IconButton>\n            <WatchLaterIcon />\n          </IconButton>\n          <IconButton>\n            <CheckCircleIcon />\n          </IconButton>\n          <IconButton>\n            <LabelImportantIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"mail__toolsRight\">\n          <IconButton>\n            <UnfoldMoreIcon />\n          </IconButton>\n          <IconButton>\n            <PrintIcon />\n          </IconButton>\n          <IconButton>\n            <ExitToAppIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"mail__body\">\n        <div className=\"mail__bodyHeader\">\n          <h2>{selectedMail?.subject}</h2>\n          <LabelImportantIcon className=\"mail__important\" />\n          <p>{selectedMail?.title}</p>\n          <p className=\"mail__time\">{selectedMail?.time}</p>\n        </div>\n        <div className=\"mail__message\">\n          <p>{selectedMail?.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mail;\n","import React from \"react\";\nimport \"./Section.css\";\n\nfunction Section({ Icon, color, title, selected }) {\n  return (\n    <div\n      className={`section ${selected && \"section--selected\"}`}\n      style={{\n        borderBottom: `3px solid ${color}`,\n        color: `${selected && color}`,\n      }}\n    >\n      <Icon />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport \"./EmailRow.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { selectMail } from \"./features/mailSlice\";\n\nfunction EmailRow({ id, title, subject, description, time }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const openMail = () => {\n    dispatch(\n      selectMail({\n        id,\n        title,\n        subject,\n        description,\n        time,\n      })\n    );\n    history.push(\"/mail\");\n  };\n  return (\n    <div onClick={openMail} className=\"emailRow\">\n      <div className=\"emailRow__options\">\n        <Checkbox />\n        <IconButton>\n          <StarBorderIcon />\n        </IconButton>\n        <IconButton>\n          <LabelImportantIcon />\n        </IconButton>\n      </div>\n      <h3 className=\"emailRow__title\">{title}</h3>\n      <div className=\"emailRow__message\">\n        <h4>\n          {subject}{\" \"}\n          <span className=\"emailRow__description\">- {description}</span>\n        </h4>\n      </div>\n      <p className=\"emailRow__time\">{time}</p>\n    </div>\n  );\n}\n\nexport default EmailRow;\n","import React, { useState, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Section from \"./Section\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport { Route } from \"react-router-dom\";\nimport EmailRow from \"./EmailRow\";\nimport { db } from \"./firebase\";\n\nfunction EmailList() {\n  const [emails, SetEmails] = useState([]);\n  useEffect(() => {\n    db.collection(\"emails\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        SetEmails(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    console.log(\"data:\", db.collection(\"emails\"));\n  }, []);\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList__settings\">\n        <div className=\"emailList__settingsLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"emailList__settingsRight\">\n          <IconButton>\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton>\n            <ChevronRightIcon />\n          </IconButton>\n          <IconButton>\n            <KeyboardHideIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"emailList__sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n      <div className=\"emalList__list\">\n        {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\n          <EmailRow\n            id={id}\n            key={id}\n            title={to}\n            subject={subject}\n            description={message}\n            time={new Date(timestamp?.seconds * 1000).toUTCString()}\n          />\n        ))}\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hello\"\n          subject=\"hey from me\"\n          description=\"This is test\"\n          time=\"10pm\"\n        />\n        <EmailRow\n          title=\"Hey\"\n          subject=\"hey again from me\"\n          description=\"This is second test\"\n          time=\"10pm\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EmailList;\n","import CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport \"./SendMail.css\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeSendMessage } from \"./features/mailSlice\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nfunction SendMail() {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (formData) => {\n    console.log(formData);\n    db.collection(\"emails\").add({\n      to: formData.to,\n      subject: formData.subject,\n      message: formData.message,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    dispatch(closeSendMessage());\n  };\n  return (\n    <div className=\"sendMail\">\n      <div className=\"sendMail__header\">\n        <h3>New message</h3>\n        <CloseIcon\n          onClick={() => {\n            dispatch(closeSendMessage());\n          }}\n          className=\"sendMail__close\"\n        />\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"to\"\n          placeholder=\"To\"\n          type=\"email\"\n          {...register(\"to\", { required: true })}\n        />\n        {errors.to && <p className=\"sendMail__error\">To is required</p>}\n\n        <input\n          name=\"subject\"\n          placeholder=\"Subject\"\n          type=\"text\"\n          {...register(\"subject\", { required: true })}\n        />\n        {errors.subject && (\n          <p className=\"sendMail__error\">Subject is required</p>\n        )}\n        <input\n          name=\"message\"\n          placeholder=\"Message\"\n          type=\"text\"\n          className=\"sendMail__message\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <p className=\"sendMail__error\">Message is required</p>\n        )}\n        <div className=\"sendMail__options\">\n          <Button\n            className=\"sendMail__send\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Send\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SendMail;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { auth, provider } from \"./firebase\";\nimport { login } from \"./features/userSlice\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const signIn = () => {\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(({ user }) => {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        );\n      })\n      .catch((error) => alert(error.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\"\n          alt=\"\"\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={signIn}>\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\nimport Mail from \"./Mail\";\nimport EmailList from \"./EmailList\";\nimport SendMail from \"./SendMail\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./Login\";\nimport { useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport { login } from \"./features/userSlice\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        );\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n          <Header />\n          <div className=\"app__body\">\n            <SideBar />\n            <Switch>\n              <Route path=\"/mail\">\n                <Mail />\n              </Route>\n              <Route path=\"/\">\n                <EmailList />\n              </Route>\n            </Switch>\n          </div>\n          {sendMessageIsOpen && <SendMail />}\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mailReducer from \"../features/mailSlice\";\nimport userReducer from \"../features/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}